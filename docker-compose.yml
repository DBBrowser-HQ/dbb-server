version: '3.8'

services:
  dbb-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dbb-server
    restart: unless-stopped
    ports:
      - "${BIND_ADDR}:${BIND_ADDR}"
    depends_on:
      - dbb-db
    networks:
      - appnet

  dbb-db:
    image: postgres
    container_name: dbb-db
    restart: unless-stopped
    volumes:
      - tmp_dbb:/var/lib/postgresql/data
    expose:
      - "${SERVER_DB_PORT}"
    ports:
      - "${SERVER_DB_PORT}:${SERVER_DB_PORT}"
    command: -p ${SERVER_DB_PORT}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${SERVER_DB_USERNAME}", "-d", "${SERVER_DB_NAME}", "-p", "${SERVER_DB_PORT}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    environment:
      POSTGRES_USER: ${SERVER_DB_USERNAME}
      POSTGRES_PASSWORD: ${SERVER_DB_PASSWORD}
      POSTGRES_DB: ${SERVER_DB_NAME}
    networks:
      - appnet

  h2-db:
    build:
      context: .
      dockerfile: Dockerfile_H2
    container_name: h2-db
    restart: unless-stopped
    expose:
      - "${H2_DB_PORT}"
      - "81"
    ports:
      - "${H2_DB_PORT}:${H2_DB_PORT}"
    environment:
      - H2_OPTIONS=-ifNotExists
      - H2_DB_PORT=${H2_DB_PORT}
    volumes:
      - h2-data:/opt/h2-data
    networks:
      - appnet

volumes:
  tmp_dbb:
  h2-data:

networks:
  appnet:
    name: appnet
    driver: bridge
